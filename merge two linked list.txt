#include <stdio.h>
#include<stdlib.h>
struct node
{
  int info;
  struct node *link;
};
struct node *create(struct node *start);
struct node *insert_s(struct node *start,int data);
struct node *insert(struct node *start,int data);
void display(struct node *start);
int main()
{
  struct node *start1=NULL, *start2=NULL;
 printf("enter linked list 1:\n"); 
 start1= create(start1);
 printf("enter linked list 2:\n");
 start2= create(start2);
 printf("list 1 is:  \n");
 display(start1);
 printf("list 2 is:  \n");
 display(start2);
}
struct node *create(struct node *start)
{
  int i,n,data;
  printf("enter no of nodes: \n");
  scanf("%d",&n);
  start= NULL;
  for(i=1;i<=n;i++)
  {
    printf("enter elements to be inserted:\n");
    scanf("%d",&data);
    start =insert_s(start,data);
  }
  return start;
}

struct node *insert_s(struct node *start,int data)
{
  struct node *p,*tmp;
 tmp=(struct node *)malloc(sizeof(struct node));
 tmp->info=data;
 if (start==NULL|| data < start->info)
 {
   tmp->link=start;
   start=tmp;
   return start;
 }
 else
 {
   p=start;
   while(p->link!=NULL && p->link->info < data)
   p=p->link;
   tmp->link= p->link;
   p->link=tmp;
  }
  return start;
}
struct node *insert(struct node *start,int data)
{
 struct node *p,*tmp;
 tmp=(struct node *)malloc(sizeof(struct node));
 tmp->info=data;
 if (start==NULL)
 {
   tmp->link=start;
   start=tmp;
   return start;
 }
 else
 {
   p=start;
   while(p->link!=NULL)
   p=p->link;
   tmp->link= p->link;
   p->link=tmp;
  }
  return start;
}
void display(struct node *start)
{
  struct node *p;
  if(start==NULL)
  {
    printf("list is empty\n");
    return;
  }
  p=start;
  while(p!=NULL)
  {
    printf("%d",p->info);
    p=p->link;
  }
  printf("\n");
}